{"version":3,"sources":["serviceWorker.js","TodoApp/TodoApp.js","ContactForm/FormContactInfo.js","ContactForm/FormUserComments.js","ContactForm/Confirm.js","ContactForm/Success.js","ContactForm/UserForm.js","ContactForm/FormDialog.js","Navigation/MainPage.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","greenAvatar","margin","color","backgroundColor","green","TodoList","todo","index","completeTodo","deleteTodo","classes","List","ListItem","button","onClick","ListItemAvatar","Avatar","className","ListItemText","primary","text","style","textDecoration","isCompleted","ListItemSecondaryAction","ListItemIcon","IconButton","edge","aria-label","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","TextField","id","placeholder","onChange","target","TodoApp","todos","setTodos","newTodos","splice","Container","maxWidth","Paper","map","key","FormContactInfo","continue","props","nextStep","this","values","handleChange","canContinue","firstName","length","lastName","email","continueButton","Button","label","required","type","fullWidth","defaultValue","disabled","Component","FormUserComments","back","prevStep","comment","multiline","rowsMax","variant","Confirm","secondary","Success","Typography","align","UserForm","state","step","setState","input","FormDialog","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","MainPage","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","noWrap","Drawer","anchor","paper","direction","Divider","component","href","src","logo","alt","App","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.52f43075.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemAvatar,\n  ListItemIcon,\n  Avatar,\n  TextField,\n  IconButton,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles({\n  greenAvatar: {\n    margin: 10,\n    color: \"#fff\",\n    backgroundColor: green[500]\n  }\n});\n\nfunction TodoList({ todo, index, completeTodo, deleteTodo }) {\n  const classes = useStyles();\n\n  return (\n    <List>\n      <ListItem button onClick={() => completeTodo(index)}>\n        <ListItemAvatar>\n          <Avatar className={classes.greenAvatar}>\n            <AssignmentIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={todo.text}\n          style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"none\" }}\n        />\n        <ListItemSecondaryAction>\n          <ListItemIcon>\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTodo(index)} >\n              <DeleteIcon />\n            </IconButton>\n          </ListItemIcon>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </List>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        id=\"standard-bare\"\n        margin=\"normal\"\n        value={value}\n        placeholder=\"Add Todo...\"\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default function TodoApp() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Practice JavaScript\",\n      isCompleted: false\n    },\n    {\n      text: \"Update Resume\",\n      isCompleted: false\n    },\n    {\n      text: \"Go Kyaking\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [{ text }, ...todos];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !todos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <TodoForm addTodo={addTodo} />\n      <Paper>\n        {todos.map((todo, index) => (\n          <TodoList\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n      </Paper>\n    </Container>\n  );\n}","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class FormContactInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const canContinue = (values.firstName.length > 0 && values.lastName.length > 0 && values.email.length > 0);\n    const continueButton = <Button color=\"primary\" label=\"Continue\" onClick={this.continue}>Continue</Button>;\n\n    return (\n      <List>\n        <ListItemText\n          primary=\"Please enter your contact information and continue to leave a\n          comment.....\"\n        />\n        <ListItem>\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"name\"\n            label=\"First Name\"\n            type=\"first name\"\n            fullWidth\n            onChange={handleChange(\"firstName\")}\n            defaultValue={values.firstName}\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Last Name\"\n            type=\"last name\"\n            fullWidth\n            onChange={handleChange(\"lastName\")}\n            defaultValue={values.lastName}\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            onChange={handleChange(\"email\")}\n            defaultValue={values.email}\n          />\n        </ListItem>\n        {canContinue ? continueButton : <Button disabled>Continue</Button>}\n      </List>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\n\nexport default class FormUserComments extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const canContinue = (values.comment.length > 0);\n    const continueButton = <Button color=\"primary\" label=\"Continue\" onClick={this.continue}>Continue</Button>;\n\n    return (\n        <List>\n          <ListItemText primary=\"Please enter a comment and continue to verify your information...\" />\n          <ListItem>\n            <TextField\n              multiline\n              fullWidth\n              id=\"outlined-multiline-flexible\"\n              label=\"Enter a comment\"\n              rowsMax=\"4\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={handleChange(\"comment\")}\n              defaultValue={values.comment}\n            />\n          </ListItem>\n          {canContinue ? continueButton : <Button disabled>Continue</Button>}\n          <Button label=\"Back\" color=\"primary\" onClick={this.back}>\n            Back\n          </Button>\n        </List>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { List, ListItemText } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default class Confirm extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { firstName, lastName, email, comment }\n    } = this.props;\n    return (\n      <List>\n        <ListItemText primary=\"Please verify your contact information before clicking confirm...\" />\n        <hr />\n        <ListItemText secondary=\"Name:  \" />\n        <ListItemText primary={firstName + \" \" + lastName} />\n        <ListItemText secondary=\"Email:  \" />\n        <ListItemText primary={email} />\n        <ListItemText secondary=\"Comment:  \" />\n        <ListItemText primary={comment} />\n        <hr />\n        <Button label=\"Confirm\" color=\"primary\" onClick={this.continue}>\n          Confirm\n        </Button>\n        <Button label=\"Back\" color=\"primary\" onClick={this.back}>\n          Back\n        </Button>\n      </List>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { firstName, lastName, email }\n    } = this.props;\n\n    return (\n      <div>\n        <Typography variant=\"h5\" align=\"center\">\n          Thank You {firstName + \" \" + lastName} For Your Submission!\n        </Typography>\n        <br />\n        <Typography align=\"center\">\n          A confirmation email will be sent to {email}\n        </Typography>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FormContactInfo from \"./FormContactInfo\";\nimport FormUserComments from \"./FormUserComments\";\nimport Confirm from \"./Confirm\";\nimport Success from \"./Success\";\n\nexport default class UserForm extends Component {\n  state = {\n    step: 1,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    comment: \"\"\n  };\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n\n  // Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n\n  // Handle fields change\n  handleChange = input => e => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { firstName, lastName, email, comment } = this.state;\n    const values = { firstName, lastName, email, comment };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormContactInfo\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 2:\n        return (\n          <FormUserComments\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Confirm\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            values={values}\n          />\n        );\n      case 4:\n        return <Success values={values} />;\n    }\n  }\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport UserForm from \"./UserForm\";\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Contact\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Contact Information</DialogTitle>\n        <DialogContent>\n          <UserForm />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport MailIcon from '@material-ui/icons/Mail';\nimport logo from '../logo.svg';\n\nimport TodoApp from '../TodoApp/TodoApp';\nimport FormDialog from \"../ContactForm/FormDialog\";\nimport '../App.css';\n\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Todo List App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button component=\"a\" href=\"https://github.com/santiagoelie\" target=\"blank\">\n            <ListItemIcon>\n              <CloudDownloadOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"GitHub\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"https://codesandbox.io/s/react-todo-list-use-state-bewkb\" target=\"blank\">\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Code Sandbox\" />\n          </ListItem>\n          <ListItem button component=\"a\" href=\"https://sites.google.com/d/1emchmyj5hQM9X4GqTSSMG4RimlXKk79c/p/1SOEPR_DJApoTEkYItdCE7hAMxRA-iwGl/edit\" target=\"blank\">\n            <ListItemIcon>\n              <MailIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Google Sites\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </ListItem>\n          <Divider />\n          <ListItem>\n           <FormDialog/>\n          </ListItem>\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <TodoApp />\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport MainPage from './Navigation/MainPage';\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n      <div className=\"App\">\n          <MainPage />\n      </div>\n    );\n  }\n  \n  const rootElement = document.getElementById(\"root\");\n  ReactDOM.render(<App />, rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}